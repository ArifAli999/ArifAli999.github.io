{"version":3,"file":"static/js/993.6ec2ca47.chunk.js","mappings":"4LAkGA,UAzFA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAASC,EAAAA,EAAAA,MAATD,KAkBR,OAfAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,2DAAD,OACwDH,EADxD,gEAGFI,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAELR,EAASQ,QAGZ,CAACP,KAKF,gBAAKQ,UAAU,qBAAf,SACGV,EAAMW,KAAI,SAACC,GAAD,OAKT,gBAAKF,UAAU,gBAAf,UAGE,iBAAKA,UAAU,YAAf,WAEE,iBAAKA,UAAU,iDAAf,WACE,iBAAKA,UAAU,iBAAf,cAAkCE,EAAKC,UAAUC,MAAM,GAAI,GAAGH,KAAI,SAACI,GAAD,OAAO,iBAAML,UAAU,OAAhB,SAAmCK,EAAEC,SAASC,MAAlBF,EAAEG,OACpGN,EAAKO,QAAQL,MAAM,GAAI,GAAGH,KAAI,SAACS,EAAKC,GAAN,OAC7B,iBAAMX,UAAU,SAAhB,SAAkCU,EAAIE,OAARD,UAGlC,iBAAKX,UAAU,SAAf,UACGE,EAAKC,UAAUC,OAAO,GAAGH,KAAI,SAACI,GAAD,OAAO,iBAAML,UAAU,OAAhB,SAAmCK,EAAEC,SAASC,MAAlBF,EAAEG,OAClEN,EAAKO,QAAQL,OAAO,GAAGH,KAAI,SAACS,EAAKC,GAAN,OAC1B,iBAAMX,UAAU,SAAhB,UAAiC,yBAAMU,EAAIE,SAAbD,aAKpC,mBAEA,iBAAKX,UAAU,+BAAf,WAEE,iBAAKA,UAAU,iBAAf,WAEE,iBAAKA,UAAU,OAAf,WAAsB,iBAAMA,UAAU,iBAAhB,oBAAtB,MAAsE,iBAAMA,UAAU,kBAAhB,SAAmCE,EAAKW,QAAUX,EAAKW,OAAON,WACpI,iBAAKP,UAAU,WAAf,WAA0B,iBAAMA,UAAU,iBAAhB,+BAA1B,MAAqF,kBAAMA,UAAU,kBAAhB,eAAmC,SAAC,IAAD,CAAQc,OAAO,qBAAf,SAAqCZ,EAAKa,kBAClK,iBAAKf,UAAU,OAAf,WAAsB,iBAAMA,UAAU,iBAAhB,kBAAtB,MAAoE,kBAAMA,UAAU,kBAAhB,eAAqCE,EAAKc,WAAad,EAAKc,UAAUT,KAAtE,WACpE,iBAAKP,UAAU,WAAf,WAA0B,iBAAMA,UAAU,iBAAhB,wBAA1B,MAA8E,kBAAMA,UAAU,kBAAhB,cAAoCE,EAAKe,YAAcf,EAAKe,WAAWV,KAAvE,MAAgFL,EAAKgB,WAAWC,WAAW,IAAK,KAAKC,cAArH,WAC9E,iBAAKpB,UAAU,OAAf,WAAsB,iBAAMA,UAAU,iBAAhB,oBAAtB,MAAsE,kBAAMA,UAAU,kBAAhB,cAAoCE,EAAKmB,MAAMC,UAA/C,MAA6DpB,EAAKmB,MAAME,KAAKH,cAA7E,WACtE,iBAAKpB,UAAU,WAAf,WAA0B,iBAAMA,UAAU,iBAAhB,mBAA1B,MAAyE,kBAAMA,UAAU,kBAAhB,gBAAsCE,EAAKC,UAAUF,KAAI,SAACI,GAAD,OAAOA,EAAEC,SAASC,QAAMiB,KAAK,QAAtF,eAK3E,gBAAKxB,UAAU,iBAAf,UACE,gBAAKyB,MAAM,SAAX,UACE,gBAAKA,MAAM,eAAX,SACGvB,EAAKwB,gBAAkB,mBAAQC,IAAG,UAAKzB,EAAKwB,eAAV,qBAA6CE,YAAY,IAAIC,gBAAgB,OAAOC,UAAU,KAAKC,OAAO,MAAMC,MAAM,UAErJ,8EAAoD,cAAGC,KAAM/B,EAAKgC,QAAQC,SAASC,UAA/B,uBAApD,mBAWZ,sBAnDgClC,EAAKM,W","sources":["components/upcomingGame.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport \"uikit/dist/css/uikit-core.min.css\";\nimport \"./styles.css\";\nimport \"./comps.css\"\nimport Moment from 'react-moment';\n\n//UpcomingGame/slug == Component for single game. \n\nfunction UpcomingGame() {\n  const [games, setGames] = useState([]);\n  const { slug } = useParams();\n\n\n  useEffect(() => {\n    fetch(\n      `https://api.pandascore.co/matches/upcoming?search[slug]=${slug}&token=a1trG0pytDA2N0RXkJVlWqA6MOb2aY8ii9szwMze-OabnW9QPu0 `\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        //console.log(data);\n        setGames(data);\n      });\n    // Fetch post using the postSlug\n  }, [slug]);\n\n\n  return (\n\n    <div className=\"container is-fluid\">\n      {games.map((game) => (\n\n\n\n\n        <div className=\"gameContainer\" key={game.id}>\n\n\n          <div className=\"inner-box\">\n            {/** Fetch team and display their corresponding score - A bit of code repition :( */}\n            <div className=\"score-board-min columns is-mobile is-multiline\">\n              <div className=\"column is-full\"> {game.opponents.slice(0, -1).map((o) => <span className=\"team\" key={o.id}>{o.opponent.name}</span>)}\n                {game.results.slice(0, -1).map((res, i) => (\n                  <span className=\"scores\" key={i}>{res.score}</span>\n                ))}</div>\n\n              <div className=\"column\">\n                {game.opponents.slice(-1).map((o) => <span className=\"team\" key={o.id}>{o.opponent.name}</span>)}\n                {game.results.slice(-1).map((res, i) => (\n                  <span className=\"scores\" key={i}><div>{res.score}</div></span>\n                ))}\n\n              </div>\n            </div>\n            <br />\n\n            <div className=\"lower-box columns is-multine\">\n\n              <div className=\"column is-half\">\n\n                <div className=\"dark\"><span className=\"is-pulled-left\">League</span>  <span className=\"is-pulled-right\">{game.league && game.league.name}</span></div>\n                <div className=\"dark alt\"><span className=\"is-pulled-left\">Start time & Date</span>  <span className=\"is-pulled-right\"> <Moment format=\"DD/MM/YYYY - HH:mm\">{game.begin_at}</Moment></span></div>\n                <div className=\"dark\"><span className=\"is-pulled-left\">Game</span>  <span className=\"is-pulled-right\">  {game.videogame && game.videogame.name} </span></div>\n                <div className=\"dark alt\"><span className=\"is-pulled-left\">Tournament</span>  <span className=\"is-pulled-right\"> {game.tournament && game.tournament.name} | {game.match_type.replaceAll('_', ' ').toUpperCase()} </span></div>\n                <div className=\"dark\"><span className=\"is-pulled-left\">Series</span>  <span className=\"is-pulled-right\"> {game.serie.full_name} | {game.serie.tier.toUpperCase()} </span></div>\n                <div className=\"dark alt\"><span className=\"is-pulled-left\">Teams</span>  <span className=\"is-pulled-right\">   {game.opponents.map((o) => o.opponent.name).join(\" vs \")}  </span></div>\n\n\n              </div>\n\n              <div className=\"column is-half\">\n                <div class=\"twitch\">\n                  <div class=\"twitch-video\">\n                    {game.live_embed_url ? (<iframe src={`${game.live_embed_url}&parent=localhost`} frameBorder=\"0\" allowFullscreen=\"true\" scrolling=\"no\" height=\"300\" width=\"100%\">\n                    </iframe>)\n                      : <p>Sorry No Streams found please follow this link   <a href={game.streams.official.embed_url}>Watch now</a> - </p>\n                    }</div></div>\n\n              </div>\n\n\n            </div>\n\n\n\n\n            <br />\n          </div>\n\n\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default UpcomingGame;\n"],"names":["useState","games","setGames","slug","useParams","useEffect","fetch","then","response","json","data","className","map","game","opponents","slice","o","opponent","name","id","results","res","i","score","league","format","begin_at","videogame","tournament","match_type","replaceAll","toUpperCase","serie","full_name","tier","join","class","live_embed_url","src","frameBorder","allowFullscreen","scrolling","height","width","href","streams","official","embed_url"],"sourceRoot":""}